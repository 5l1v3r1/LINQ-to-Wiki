using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq.Expressions;
// <copyright file="EnumFixerTest.Fix.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LinqToWiki.Expressions.Tests
{
    public partial class EnumFixerTest
    {

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix499()
{
    Expression expression;
    expression = this.Fix((Expression)null);
    Assert.IsNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix308()
{
    object o;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    expression = this.Fix((Expression)o);
    Assert.IsNotNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix47905()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Coalesce, (Expression)o, (Expression)o);
    expression = this.Fix((Expression)binaryExpression);
    Assert.IsNotNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix47906()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Equal, (Expression)o, (Expression)o);
    expression = this.Fix((Expression)binaryExpression);
    Assert.IsNotNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix47907()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.NotEqual, (Expression)o, (Expression)o);
    expression = this.Fix((Expression)binaryExpression);
    Assert.IsNotNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix199()
{
    object o;
    object o1;
    Expression expression;
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    expression = this.Fix((Expression)o1);
    Assert.IsNotNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(EnumFixerTest))]
public void Fix19901()
{
    object o;
    object o1;
    Expression expression;
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsFalse, (Expression)o, (Type)null);
    expression = this.Fix((Expression)o1);
    Assert.IsNotNull((object)expression);
}
    }
}
