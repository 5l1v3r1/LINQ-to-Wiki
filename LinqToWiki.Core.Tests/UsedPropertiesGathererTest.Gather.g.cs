using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq.Expressions;
using System.Collections.Generic;
using LinqToWiki.Expressions;
// <copyright file="UsedPropertiesGathererTest.Gather.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LinqToWiki.Expressions.Tests
{
    public partial class UsedPropertiesGathererTest
    {

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather360()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)null, 
                (Expression)null, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(true, b);
    Assert.IsNotNull((object)iEnumerable);
}

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather445()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    object o;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    o = ConstantExpressionFactory.Create((object)null);
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)o, 
                (Expression)null, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)iEnumerable);
}

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather165()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    object o;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    o = ConstantExpressionFactory.Create((object)null);
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)null, 
                (Expression)o, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)iEnumerable);
}

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather639()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    object o;
    object o1;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)o1, 
                (Expression)null, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)iEnumerable);
}

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather63901()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    object o;
    object o1;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsFalse, (Expression)o, (Type)null);
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)o1, 
                (Expression)null, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)iEnumerable);
}

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather361()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    object o;
    object o1;
    object o2;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    o2 =
      UnaryExpressionFactory.Create(ExpressionType.Not, (Expression)o, (Type)null);
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)o2, 
                (Expression)o1, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)iEnumerable);
}

[TestMethod]
[PexGeneratedBy(typeof(UsedPropertiesGathererTest))]
public void Gather288()
{
    UsedPropertiesGatherer usedPropertiesGatherer;
    object o;
    object o1;
    object o2;
    usedPropertiesGatherer = UsedPropertiesGathererFactory.Create();
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    o2 =
      UnaryExpressionFactory.Create(ExpressionType.Not, (Expression)o1, (Type)null);
    bool b = false;
    IEnumerable<string> iEnumerable = (IEnumerable<string>)null;
    this.Gather(usedPropertiesGatherer, (Expression)o2, 
                (Expression)o1, out b, out iEnumerable);
    Assert.IsNotNull((object)usedPropertiesGatherer);
    Assert.AreEqual<bool>(true, b);
    Assert.IsNotNull((object)iEnumerable);
}
    }
}
