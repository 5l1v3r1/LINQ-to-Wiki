using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;
using LinqToWiki;
using LinqToWiki.Internals;
// <copyright file="NamespaceInfoTest.Constructor.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LinqToWiki.Internals.Tests
{
    public partial class NamespaceInfoTest
    {

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException942()
{
    NamespaceInfo namespaceInfo;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
public void Constructor886()
{
    NamespaceInfo namespaceInfo;
    Namespace[] namespaces = new Namespace[0];
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
    Assert.IsNotNull((object)namespaceInfo);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
public void Constructor166()
{
    object o;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(0);
    Namespace[] namespaces = new Namespace[1];
    namespaces[0] = (Namespace)o;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
    Assert.IsNotNull((object)namespaceInfo);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(NullReferenceException))]
public void ConstructorThrowsNullReferenceException92801()
{
    NamespaceInfo namespaceInfo;
    Namespace[] namespaces = new Namespace[1];
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(NullReferenceException))]
public void ConstructorThrowsNullReferenceException48301()
{
    object o;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(441);
    Namespace[] namespaces = new Namespace[2];
    namespaces[0] = (Namespace)o;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
public void Constructor813()
{
    object o;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(int.MinValue);
    Namespace[] namespaces = new Namespace[1];
    namespaces[0] = (Namespace)o;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
    Assert.IsNotNull((object)namespaceInfo);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException20()
{
    object o;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(33);
    Namespace[] namespaces = new Namespace[2];
    namespaces[0] = (Namespace)o;
    namespaces[1] = (Namespace)o;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
public void Constructor142()
{
    object o;
    object o1;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(33);
    o1 = NamespaceFactory.Create(0);
    Namespace[] namespaces = new Namespace[2];
    namespaces[0] = (Namespace)o;
    namespaces[1] = (Namespace)o1;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
    Assert.IsNotNull((object)namespaceInfo);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException896()
{
    object o;
    object o1;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(594);
    o1 = NamespaceFactory.Create(526);
    Namespace[] namespaces = new Namespace[3];
    namespaces[0] = (Namespace)o;
    namespaces[1] = (Namespace)o1;
    namespaces[2] = (Namespace)o1;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException886()
{
    object o;
    object o1;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(1484432706);
    o1 = NamespaceFactory.Create(-663050942);
    Namespace[] namespaces = new Namespace[3];
    namespaces[0] = (Namespace)o;
    namespaces[1] = (Namespace)o1;
    namespaces[2] = (Namespace)o1;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException925()
{
    object o;
    object o1;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(-2146356209);
    o1 = NamespaceFactory.Create(1127439);
    Namespace[] namespaces = new Namespace[3];
    namespaces[0] = (Namespace)o;
    namespaces[1] = (Namespace)o1;
    namespaces[2] = (Namespace)o;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}

[TestMethod]
[PexGeneratedBy(typeof(NamespaceInfoTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException11()
{
    object o;
    object o1;
    NamespaceInfo namespaceInfo;
    o = NamespaceFactory.Create(86019);
    o1 = NamespaceFactory.Create(1020334083);
    Namespace[] namespaces = new Namespace[3];
    namespaces[0] = (Namespace)o;
    namespaces[1] = (Namespace)o1;
    namespaces[2] = (Namespace)o;
    namespaceInfo = this.Constructor((IEnumerable<Namespace>)namespaces);
}
    }
}
