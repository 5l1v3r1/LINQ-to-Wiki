using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using LinqToWiki.Internals;
using System.Collections.Generic;
using LinqToWiki.Parameters;
using LinqToWiki.Download;
// <copyright file="QueryPageProcessorTest.ProcessParameters.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LinqToWiki.Internals.Tests
{
    public partial class QueryPageProcessorTest
    {

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessParametersThrowsArgumentNullException775()
{
    HttpQueryParameterBase[] httpQueryParameterBases;
    httpQueryParameterBases =
      this.ProcessParameters((IEnumerable<PropQueryParameters>)null, 
                             (IEnumerable<HttpQueryParameterBase>)null, 
                             (Dictionary<string, QueryTypeProperties>)null, 
                             false, (IEnumerable<string>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessParametersThrowsArgumentNullException316()
{
    HttpQueryParameterBase[] httpQueryParameterBases;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[0];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)null, 
                                   (Dictionary<string, QueryTypeProperties>)null, 
                                   false, (IEnumerable<string>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessParametersThrowsArgumentNullException921()
{
    HttpQueryParameterBase[] httpQueryParameterBases;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[0];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[0];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   (Dictionary<string, QueryTypeProperties>)null, 
                                   false, (IEnumerable<string>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
public void ProcessParameters179()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[0];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[0];
    string[] ss = new string[0];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, false, (IEnumerable<string>)ss);
    Assert.IsNotNull((object)httpQueryParameterBases);
    Assert.AreEqual<int>(2, httpQueryParameterBases.Length);
    Assert.IsNotNull((object)(httpQueryParameterBases[0]));
    Assert.AreEqual<string>("action", httpQueryParameterBases[0].Name);
    Assert.IsNotNull((object)(httpQueryParameterBases[1]));
    Assert.AreEqual<string>("prop", httpQueryParameterBases[1].Name);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
public void ProcessParameters941()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[0];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[0];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, false, (IEnumerable<string>)null);
    Assert.IsNotNull((object)httpQueryParameterBases);
    Assert.AreEqual<int>(2, httpQueryParameterBases.Length);
    Assert.IsNotNull((object)(httpQueryParameterBases[0]));
    Assert.AreEqual<string>("action", httpQueryParameterBases[0].Name);
    Assert.IsNotNull((object)(httpQueryParameterBases[1]));
    Assert.AreEqual<string>("prop", httpQueryParameterBases[1].Name);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
public void ProcessParameters449()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[0];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[1];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, false, (IEnumerable<string>)null);
    Assert.IsNotNull((object)httpQueryParameterBases);
    Assert.AreEqual<int>(3, httpQueryParameterBases.Length);
    Assert.IsNotNull((object)(httpQueryParameterBases[0]));
    Assert.AreEqual<string>("action", httpQueryParameterBases[0].Name);
    Assert.IsNull((object)(httpQueryParameterBases[1]));
    Assert.IsNotNull((object)(httpQueryParameterBases[2]));
    Assert.AreEqual<string>("prop", httpQueryParameterBases[2].Name);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
[ExpectedException(typeof(NullReferenceException))]
public void ProcessParametersThrowsNullReferenceException614()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[1];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[0];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, false, (IEnumerable<string>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
public void ProcessParameters991()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[0];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[0];
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, true, (IEnumerable<string>)null);
    Assert.IsNotNull((object)httpQueryParameterBases);
    Assert.AreEqual<int>(2, httpQueryParameterBases.Length);
    Assert.IsNotNull((object)(httpQueryParameterBases[0]));
    Assert.AreEqual<string>("action", httpQueryParameterBases[0].Name);
    Assert.IsNotNull((object)(httpQueryParameterBases[1]));
    Assert.AreEqual<string>("prop", httpQueryParameterBases[1].Name);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessParametersThrowsArgumentNullException202()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    PropQueryParameters propQueryParameters;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    propQueryParameters = new PropQueryParameters((string)null);
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[1];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[1];
    propQueryParameterss[0] = propQueryParameters;
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, false, (IEnumerable<string>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(QueryPageProcessorTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ProcessParametersThrowsArgumentNullException194()
{
    Dictionary<string, QueryTypeProperties> dictionary;
    PropQueryParameters propQueryParameters;
    HttpQueryParameterBase[] httpQueryParameterBases;
    dictionary = new Dictionary<string, QueryTypeProperties>(0);
    dictionary[""] = (QueryTypeProperties)null;
    propQueryParameters = new PropQueryParameters("");
    PropQueryParameters[] propQueryParameterss = new PropQueryParameters[1];
    HttpQueryParameterBase[] httpQueryParameterBases1
       = new HttpQueryParameterBase[1];
    propQueryParameterss[0] = propQueryParameters;
    httpQueryParameterBases = this.ProcessParameters
                                  ((IEnumerable<PropQueryParameters>)propQueryParameterss, 
                                   (IEnumerable<HttpQueryParameterBase>)httpQueryParameterBases1, 
                                   dictionary, false, (IEnumerable<string>)null);
}
    }
}
