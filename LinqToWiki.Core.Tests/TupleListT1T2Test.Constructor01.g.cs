using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;
using LinqToWiki.Collections;
// <copyright file="TupleListT1T2Test.Constructor01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LinqToWiki.Collections.Tests
{
    public partial class TupleListT1T2Test
    {

[TestMethod]
[PexGeneratedBy(typeof(TupleListT1T2Test))]
[ExpectedException(typeof(ArgumentNullException))]
public void Constructor01ThrowsArgumentNullException123()
{
    TupleList<int, int> tupleList;
    tupleList = this.Constructor01<int, int>((IEnumerable<Tuple<int, int>>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(TupleListT1T2Test))]
public void Constructor01611()
{
    TupleList<int, int> tupleList;
    Tuple<int, int>[] tuples = new Tuple<int, int>[1];
    tupleList = this.Constructor01<int, int>((IEnumerable<Tuple<int, int>>)tuples);
    Assert.IsNotNull((object)tupleList);
    Assert.AreEqual<int>(1, ((List<Tuple<int, int>>)tupleList).Capacity);
    Assert.AreEqual<int>(1, ((List<Tuple<int, int>>)tupleList).Count);
}

[TestMethod]
[PexGeneratedBy(typeof(TupleListT1T2Test))]
public void Constructor174()
{
    TupleList<int, int> tupleList;
    tupleList = this.Constructor<int, int>();
    Assert.IsNotNull((object)tupleList);
    Assert.AreEqual<int>(0, ((List<Tuple<int, int>>)tupleList).Capacity);
    Assert.AreEqual<int>(0, ((List<Tuple<int, int>>)tupleList).Count);
}
    }
}
