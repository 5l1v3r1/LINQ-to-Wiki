using Microsoft.Pex.Framework;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq.Expressions;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LinqToWiki.Expressions.Tests
{
    public partial class ExpressionFinderTest
    {

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException624()
{
    Expression expression;
    expression =
      this.Single<Expression>((Expression)null, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException541()
{
    object o;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    expression =
      this.Single<Expression>((Expression)o, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
public void Single879()
{
    object o;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    choices.NextSegment(1).DefaultSession
        .At(0, "result", (object)true);
    expression = this.Single<Expression>
                     ((Expression)o, PexChoose.CreateDelegate<Func<Expression, bool>>());
    Assert.IsNotNull((object)expression);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException225()
{
    object o;
    object o1;
    Expression expression;
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    expression =
      this.Single<Expression>((Expression)o1, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException22501()
{
    object o;
    object o1;
    Expression expression;
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsFalse, (Expression)o, (Type)null);
    expression =
      this.Single<Expression>((Expression)o1, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException638()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Coalesce, (Expression)o, (Expression)o);
    expression = this.Single<Expression>
                     ((Expression)binaryExpression, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException63801()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Equal, (Expression)o, (Expression)o);
    expression = this.Single<Expression>
                     ((Expression)binaryExpression, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException63802()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.NotEqual, (Expression)o, (Expression)o);
    expression = this.Single<Expression>
                     ((Expression)binaryExpression, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException63806()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    object boxi = (object)(default(IntPtr));
    o = ConstantExpressionFactory.Create(boxi);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Equal, (Expression)o, (Expression)o);
    expression = this.Single<Expression>
                     ((Expression)binaryExpression, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SingleThrowsArgumentNullException63807()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    object boxd = (object)(default(double));
    o = ConstantExpressionFactory.Create(boxd);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Power, (Expression)o, (Expression)o);
    expression = this.Single<Expression>
                     ((Expression)binaryExpression, (Func<Expression, bool>)null);
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void SingleThrowsInvalidOperationException85602()
{
    object o;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    expression = this.Single<Expression>
                     ((Expression)o, PexChoose.CreateDelegate<Func<Expression, bool>>());
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void SingleThrowsInvalidOperationException85603()
{
    object o;
    Expression expression;
    object s0 = new object();
    o = ConstantExpressionFactory.Create(s0);
    expression = this.Single<Expression>
                     ((Expression)o, PexChoose.CreateDelegate<Func<Expression, bool>>());
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void SingleThrowsInvalidOperationException961()
{
    object o;
    object o1;
    Expression expression;
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    expression = this.Single<Expression>
                     ((Expression)o1, PexChoose.CreateDelegate<Func<Expression, bool>>());
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void SingleThrowsInvalidOperationException994()
{
    object o;
    object o1;
    Expression expression;
    object boxb = (object)(default(bool));
    o = ConstantExpressionFactory.Create(boxb);
    o1 = UnaryExpressionFactory.Create
             (ExpressionType.IsTrue, (Expression)o, (Type)null);
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    choices.NextSegment(2).DefaultSession
        .At(0, "result", (object)true)
        .At(1, "result", (object)true);
    expression = this.Single<Expression>
                     ((Expression)o1, PexChoose.CreateDelegate<Func<Expression, bool>>());
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void SingleThrowsInvalidOperationException30401()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Coalesce, (Expression)o, (Expression)o);
    expression = this.Single<Expression>((Expression)binaryExpression, 
                                         PexChoose.CreateDelegate<Func<Expression, bool>>());
}

[TestMethod]
[PexGeneratedBy(typeof(ExpressionFinderTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void SingleThrowsInvalidOperationException25()
{
    object o;
    BinaryExpression binaryExpression;
    Expression expression;
    o = ConstantExpressionFactory.Create((object)null);
    binaryExpression = BinaryExpressionFactory.Create
                           (ExpressionType.Equal, (Expression)o, (Expression)o);
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    choices.NextSegment(2).DefaultSession
        .At(0, "result", (object)true)
        .At(1, "result", (object)true)
        .At(2, "result", (object)true);
    expression = this.Single<Expression>((Expression)binaryExpression, 
                                         PexChoose.CreateDelegate<Func<Expression, bool>>());
}
    }
}
